" LINUX VERSION

" Vundle ============================================================
" Make sure you have Vundle installed:
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Keep Plugin commands between vundle#begin/end.
Plugin 'tpope/vim-fugitive'  " :Git commands
Plugin 'airblade/vim-gitgutter'
Plugin 'itchyny/lightline.vim'
Plugin 'davidhalter/jedi-vim'
Plugin 'jpalardy/vim-slime'

" Currently unused plugins
" ------------------------
" Plugin 'preservim/nerdtree'  " file explorer
" Plugin 'Xuyuanp/nerdtree-git-plugin'
" Plugin 'ycm-core/YouCompleteMe'
" Plugin 'vim-scripts/indentpython.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
" filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line =========================

if has('autocmd')
  filetype plugin indent on
endif
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

" Use :help 'option' to see the documentation for the given option.

set autoindent
set backspace=indent,eol,start
set complete-=i
set smarttab

set nrformats-=octal

if !has('nvim') && &ttimeoutlen == -1
  set ttimeout
  set ttimeoutlen=100
endif

set incsearch
set hlsearch
" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif

set laststatus=2
set ruler
set wildmenu

if !&scrolloff
  set scrolloff=3
endif
if !&sidescrolloff
  set sidescrolloff=5
endif
set display+=lastline

if &encoding ==# 'latin1' && has('gui_running')
  set encoding=utf-8
endif

if &listchars ==# 'eol:$'
  set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif

if has('path_extra')
  setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif

set autoread

if &history < 1000
  set history=1000
endif
if &tabpagemax < 50
  set tabpagemax=50
endif
if !empty(&viminfo)
  set viminfo^=!
endif
set sessionoptions-=options
set viewoptions-=options

" Allow color schemes to do bright colors without forcing bold.
" if &t_Co == 8 && $TERM !~# '^Eterm'
"   set t_Co=16
" endif
"
" if empty(mapcheck('<C-U>', 'i'))
"   inoremap <C-U> <C-G>u<C-U>
" endif
" if empty(mapcheck('<C-W>', 'i'))
"   inoremap <C-W> <C-G>u<C-W>
" endif

" Tab -> 4 spaces
set tabstop=4
set shiftwidth=4
set expandtab

" Choose color scheme
colorscheme ka
" colorscheme onedark

" Line numbers
set number
nnoremap <F6> :set number!<CR>

" Cursor line
set cursorline

" Encoding
set encoding=utf-8

" Remove all trailing whitespace upon saving
autocmd BufWritePre * %s/\s\+$//e

" Find files recursively
" set path+=**

" NERDTree shortcut
" inoremap <F7> <ESC>:NERDTreeToggle<CR>
" nnoremap <F7> :NERDTreeToggle<CR>
" nnoremap <F8> :NERDTreeFind<CR>
" inoremap <F8> <ESC>:NERDTreeFind<CR>

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
" Press zR to unfold all
nnoremap <space> za

" YouCompleteMe
" nmap <leader>d <plug>(YCMHover)
" nnoremap <Leader>g :YcmCompleter GoTo<CR>
" nnoremap <Leader>r :YcmCompleter GoToReferences<CR>

" Disable arrow keys in all modes except insert
noremap <Left> <nop>
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Right> <nop>

" vim-slime
let g:slime_target = "vimterminal"
let g:slime_vimterminal_cmd = "ipython"
" let g:slime_python_ipython = 1

" Select cell for vim-slime
let @c = '/#%%NVnk'

" netrw
let g:netrw_list_hide= '\(^\|\s\s\)\zs\.\S\+'
let g:netrw_banner=0
let g:netrw_browse_split=0
" noremap <F7> :Exp<cr>
" noremap <F8> :Vex<cr>

" lightline: show absolute path
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ], [ 'readonly', 'absolutepath', 'modified' ] ],
      \ },
      \ 'colorscheme': 'one',
      \ }

" Replace selection with register
let @r = '"xd"0P'

" Temporary workaround for entering vim in replace mode on Win10/WSL
" https://superuser.com/questions/1284561/why-is-vim-starting-in-replace-mode
set t_u7=
